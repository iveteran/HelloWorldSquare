#!/bin/bash

# Generated by Claude AI
#
# Docker 存储位置迁移脚本
# 从 /var/lib/docker 迁移到 /opt/docker

set -e

NEW_DOCKER_ROOT="/opt/docker"
OLD_DOCKER_ROOT="/var/lib/docker"

echo "=== Docker 存储位置迁移 ==="
echo "从: $OLD_DOCKER_ROOT"
echo "到: $NEW_DOCKER_ROOT"
echo

# 检查是否有足够权限
if [ "$EUID" -ne 0 ]; then
    echo "错误: 需要 root 权限运行此脚本"
    echo "请使用: sudo $0"
    exit 1
fi

# 检查目标目录
echo "1. 检查目标目录..."
if [ ! -d "/opt" ]; then
    echo "创建 /opt 目录..."
    mkdir -p /opt
fi

# 检查磁盘空间
echo "2. 检查磁盘空间..."
OLD_SIZE=$(du -sh $OLD_DOCKER_ROOT 2>/dev/null | cut -f1 || echo "0")
AVAILABLE_SPACE=$(df -h /opt | awk 'NR==2 {print $4}')
echo "当前 Docker 数据大小: $OLD_SIZE"
echo "/opt 目录可用空间: $AVAILABLE_SPACE"

read -p "确认继续迁移? (y/N): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "取消迁移"
    exit 1
fi

# 停止 Docker 服务
echo "3. 停止 Docker 服务..."
systemctl stop docker
systemctl stop docker.socket

# 检查 Docker 是否完全停止
echo "4. 等待 Docker 完全停止..."
sleep 3

# 备份原有配置（如果存在）
echo "5. 备份配置..."
if [ -f /etc/docker/daemon.json ]; then
    cp /etc/docker/daemon.json /etc/docker/daemon.json.backup.$(date +%Y%m%d_%H%M%S)
    echo "已备份现有配置文件"
fi

# 创建新的 Docker 根目录
echo "6. 创建新的 Docker 根目录..."
mkdir -p $NEW_DOCKER_ROOT

# 如果旧目录存在且不为空，则迁移数据
if [ -d "$OLD_DOCKER_ROOT" ] && [ "$(ls -A $OLD_DOCKER_ROOT)" ]; then
    echo "7. 迁移现有 Docker 数据..."
    echo "这可能需要一些时间，请耐心等待..."

    # 使用 rsync 进行数据迁移（如果可用）
    if command -v rsync >/dev/null 2>&1; then
        rsync -av $OLD_DOCKER_ROOT/ $NEW_DOCKER_ROOT/
    else
        # 使用 cp 作为备选
        cp -a $OLD_DOCKER_ROOT/* $NEW_DOCKER_ROOT/
    fi

    echo "数据迁移完成"
else
    echo "7. 没有发现现有 Docker 数据，跳过迁移"
fi

# 创建或更新 daemon.json
echo "8. 更新 Docker 配置..."
mkdir -p /etc/docker

# 创建新的配置文件
cat > /etc/docker/daemon.json << EOF
{
  "data-root": "$NEW_DOCKER_ROOT",
  "storage-driver": "overlay2",
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "10m",
    "max-file": "3"
  }
}
EOF

echo "Docker 配置已更新"

# 设置正确的权限
echo "9. 设置目录权限..."
chown -R root:root $NEW_DOCKER_ROOT
chmod -R 755 $NEW_DOCKER_ROOT

# 重新加载 systemd 并启动 Docker
echo "10. 启动 Docker 服务..."
systemctl daemon-reload
systemctl start docker

# 检查 Docker 状态
echo "11. 检查 Docker 状态..."
sleep 5

if systemctl is-active --quiet docker; then
    echo "✅ Docker 服务启动成功"

    # 验证新的数据目录
    docker_info=$(docker info 2>/dev/null | grep "Docker Root Dir" || echo "")
    if [[ $docker_info == *"$NEW_DOCKER_ROOT"* ]]; then
        echo "✅ Docker 根目录已成功更改为: $NEW_DOCKER_ROOT"
    else
        echo "⚠️  警告: Docker 根目录可能没有正确更改"
    fi

    # 测试 Docker 功能
    echo "12. 测试 Docker 功能..."
    if docker run --rm hello-world >/dev/null 2>&1; then
        echo "✅ Docker 功能测试通过"

        # 询问是否删除旧数据
        echo
        echo "迁移完成！"
        echo "旧的 Docker 数据仍在 $OLD_DOCKER_ROOT"
        echo "请确认一切正常后，可以手动删除旧数据："
        echo "sudo rm -rf $OLD_DOCKER_ROOT"

    else
        echo "❌ Docker 功能测试失败"
        echo "请检查配置或恢复原有设置"
    fi
else
    echo "❌ Docker 服务启动失败"
    echo "请检查日志: sudo journalctl -u docker"
fi

echo
echo "=== 迁移完成 ==="
echo "新的 Docker 根目录: $NEW_DOCKER_ROOT"
echo "配置文件: /etc/docker/daemon.json"
