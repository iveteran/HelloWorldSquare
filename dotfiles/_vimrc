" An example for a vimrc file.
"
" Maintainer:	Bram Moolenaar <Bram@vim.org>
" Last change:	2011 Apr 15
"
" To use it, copy it to
"     for Unix and OS/2:  ~/.vimrc
"	      for Amiga:  s:.vimrc
"  for MS-DOS and Win32:  $VIM\_vimrc
"	    for OpenVMS:  sys$login:.vimrc

" When started as "evim", evim.vim will already have done these settings.
if v:progname =~? "evim"
  finish
endif

" Use Vim settings, rather than Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

if has("vms")
  set nobackup		" do not keep a backup file, use versions instead
else
  set backup		" keep a backup file
endif
set history=50		" keep 50 lines of command line history
set ruler		" show the cursor position all the time
set showcmd		" display incomplete commands
set incsearch		" do incremental searching

" For Win32 GUI: remove 't' flag from 'guioptions': no tearoff menu entries
" let &guioptions = substitute(&guioptions, "t", "", "g")

" Don't use Ex mode, use Q for formatting
map Q gq

" CTRL-U in insert mode deletes a lot.  Use CTRL-G u to first break undo,
" so that you can undo CTRL-U after inserting a line break.
inoremap <C-U> <C-G>u<C-U>

" In many terminal emulators the mouse works just fine, thus enable it.
"if has('mouse')
"  set mouse=a
"endif

" Switch syntax highlighting on, when the terminal has colors
" Also switch on highlighting the last used search pattern.
if &t_Co > 2 || has("gui_running")
  syntax on
  set hlsearch
endif

" Only do this part when compiled with support for autocommands.
if has("autocmd")

  " Enable file type detection.
  " Use the default filetype settings, so that mail gets 'tw' set to 72,
  " 'cindent' is on in C files, etc.
  " Also load indent files, to automatically do language-dependent indenting.
  filetype plugin indent on

  " Put these in an autocmd group, so that we can delete them easily.
  augroup vimrcEx
  au!

  " For all text files set 'textwidth' to 78 characters.
  autocmd FileType text setlocal textwidth=78

  " When editing a file, always jump to the last known cursor position.
  " Don't do it when the position is invalid or when inside an event handler
  " (happens when dropping a file on gvim).
  " Also don't do it when the mark is in the first line, that is the default
  " position when opening a file.
  autocmd BufReadPost *
    \ if line("'\"") > 1 && line("'\"") <= line("$") |
    \   exe "normal! g`\"" |
    \ endif

  augroup END

else

  set autoindent		" always set autoindenting on

endif " has("autocmd")

" Convenient command to see the difference between the current buffer and the
" file it was loaded from, thus the changes you made.
" Only define it when not defined already.
if !exists(":DiffOrig")
  command DiffOrig vert new | set bt=nofile | r ++edit # | 0d_ | diffthis
		  \ | wincmd p | diffthis
endif


set ignorecase
set incsearch
set smartcase
set wildmenu
set wildmode=longest:list,full
set scrolloff=2
set background=dark
colorscheme torte
" More 3rd colorschems: https://vimcolorschemes.com/
"colorscheme PaperColor " https://github.com/NLKNguyen/papercolor-theme.git
"colorscheme gruvbox " https://github.com/morhetz/gruvbox.git
"colorscheme deus " https://github.com/ajmwagar/vim-deus.git
"colorscheme sonokai " https://github.com/sainnhe/sonokai.git
hi Normal ctermbg=0  " Make the background color same as terminal's
set number
set linebreak
set autoread
set nobackup
set ci
set ai
set tabstop=4
set softtabstop=4
set shiftwidth=4
set smartindent
set smarttab
set expandtab
"set cuc
"set paste
set formatoptions-=cro " help fo-table
set iskeyword-=/,.,@  " make /.@ not be part of word

" set tags file
set tags=tags;,TAGS;
set autochdir
set omnifunc=syntaxcomplete#Complete

"set path+=~/projects/iDirect/Core_Libs

"set foldcolumn=4
"set foldmethod=syntax
":let Grep_OpenQuickfixWindow = 0

set laststatus=2
if filereadable(expand("~/.vimrc.statusline"))
  so ~/.vimrc.statusline
endif

if filereadable(expand("~/.vimrc.vim-plug"))
  so ~/.vimrc.vim-plug
endif
if filereadable(expand("~/.vimrc.vundle"))
  so ~/.vimrc.vundle
endif
if filereadable(expand("~/.vimrc.ycm"))
  so ~/.vimrc.ycm
endif
if filereadable(expand("~/.vimrc.fzf"))
  so ~/.vimrc.fzf
endif

" NOTE: Put below option at the end of this file
set shortmess-=S  " show search results count on statusline(bottom right)
set showcmd	      " display incomplete commands

" NOTE: To set below options in ~/.editorconfig
"augroup FileTypeSpecificAutocommands
"    autocmd!
"
"    autocmd FileType json setlocal tabstop=2 softtabstop=2 shiftwidth=2
"    autocmd FileType javascript setlocal tabstop=2 softtabstop=2 shiftwidth=2
"    autocmd FileType css setlocal tabstop=2 softtabstop=2 shiftwidth=2
"    autocmd FileType scss setlocal tabstop=2 softtabstop=2 shiftwidth=2
"    autocmd FileType html setlocal tabstop=2 softtabstop=2 shiftwidth=2
"    autocmd FileType htm setlocal tabstop=2 softtabstop=2 shiftwidth=2
"    autocmd FileType vue setlocal tabstop=2 softtabstop=2 shiftwidth=2
"    autocmd FileType rs setlocal tabstop=2 softtabstop=2 shiftwidth=2
"    autocmd FileType svelte setlocal tabstop=2 softtabstop=2 shiftwidth=2
"    autocmd FileType dart setlocal tabstop=2 softtabstop=2 shiftwidth=2
"augroup END

if executable('clangd')
    augroup lsp_clangd
        autocmd!
        autocmd User lsp_setup call lsp#register_server({
                    \ 'name': 'clangd',
                    \ 'cmd': {server_info->['clangd']},
                    \ 'whitelist': ['c', 'cpp', 'objc', 'objcpp'],
                    \ })
        autocmd FileType c setlocal omnifunc=lsp#complete
        autocmd FileType cpp setlocal omnifunc=lsp#complete
        autocmd FileType objc setlocal omnifunc=lsp#complete
        autocmd FileType objcpp setlocal omnifunc=lsp#complete
    augroup end
endif
