# .bash_profile

# Get the aliases and functions
if [ -f ~/.bashrc ]; then
	. ~/.bashrc
fi

#if [[ "$TERM" = "linux" && -e `which fbterm` ]]; then
#    fbterm
#fi

# User specific environment and startup programs

export LANG='en_US.UTF-8'
export LC_ALL='en_US.UTF-8'

#[[ -f /usr/bin/starship || -f ~/.local/bin/starship ]] && eval "$(starship init bash)"

[[ -f ~/.bash_prompt ]] && source ~/.bash_prompt
[[ -f ~/.bash_aliases ]] && source ~/.bash_aliases
[[ -f ~/.less_termcap ]] && source ~/.less_termcap
[[ -f ~/.profile_proxy ]] && source ~/.profile_proxy
[[ -f ~/.fzfrc.sh ]] && source ~/.fzfrc.sh

PATH=$PATH:$HOME/.local/bin:$HOME/bin:/sbin:/usr/sbin:/snap/bin

# Golang environment
[ -d /opt/go/bin ] && PATH=$PATH:/opt/go/bin
export GOPATH=/opt/yuu/go
[ -d $GOPATH ] && PATH=$PATH:"$GOPATH/bin"

# AppImage path
[ -d /opt/AppImage ] && PATH=$PATH:/opt/AppImage

# Node manager(fnm) environment
# Refer: https://nodejs.org/en/download
FNM_PATH="/home/yuu/.local/share/fnm"
if [ -d "$FNM_PATH" ]; then
  export PATH="$FNM_PATH:$PATH"
  eval "`fnm env`"
fi

export PATH

# Tmuxifier
## git clone https://github.com/jimeh/tmuxifier.git ~/.tmuxifier
##export PATH=$PATH:$HOME/.tmuxifier/bin
#export PATH=$PATH:$HOME/.tmux/plugins/tmuxifier/bin
#eval "$(tmuxifier init -)"
#export TMUXIFIER_LAYOUT_PATH="$HOME/.tmux-layouts"

export EDITOR='vim'
export PAGER='less'
#export PAGER='most'
#
export HISTTIMEFORMAT='[%F %T] '
#export HISTCONTROL=ignorespace
#export HISTCONTROL=ignoredups
export HISTCONTROL=ignoreboth # both ignore space and dups

export SYSTEMD_EDITOR='vim'
export PSQL_EDITOR="vim -c 'set syntax=sql'"

set -o vi
stty -ixon  # Enable searching history in Bash forward after backward with CTRL-S

if [ -f /usr/bin/virtualenvwrapper.sh ]; then
    . /usr/bin/virtualenvwrapper.sh
fi

if [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
fi

jf_bat() {
  local file=$1
  jf $file | bat -l json
}

# Enable use GUI apps on WSL by VcXsrv for Windows 10
# Refers:
#   1) https://techcommunity.microsoft.com/t5/windows-dev-appconsult/running-wsl-gui-apps-on-windows-10/ba-p/1493242
#   2) https://sourceforge.net/projects/vcxsrv/
#export DISPLAY="`grep nameserver /etc/resolv.conf | sed 's/nameserver //'`:0"
#export DISPLAY=":0"

# Rust environment
[ -f "$HOME/.cargo/env" ] && . "$HOME/.cargo/env"


# 配置 GOPROXY 环境变量
#export GOPROXY=https://proxy.golang.com.cn,direct
#export GOPROXY=https://jp.iveteran.me:4433,direct
# # 还可以设置不走 proxy 的私有仓库或组，多个用逗号相隔（可选）
# export GOPRIVATE=git.mycompany.com,github.com/my/private

# GnuPG
export GPG_TTY=$(tty)

# Install: apt install keychian
if [[ -f $HOME/.ssh/iv.id_rsa && -x /usr/bin/keychian ]]; then
    keychain $HOME/.ssh/iv.id_rsa
    source $HOME/.keychain/$HOSTNAME-sh
fi

# khal
[ -x /usr/bin/khal ] && eval "$(_KHAL_COMPLETE=bash_source khal)"

# x-cmd
# Repo: https://github.com/x-cmd/x-cmd
# Install: eval "$(curl https://get.x-cmd.com)"
x_on() {
    [ -f "$HOME/.x-cmd.root/X" ] && . "$HOME/.x-cmd.root/X" # boot up x-cmd.
    #source ~/.bash_prompt
}
#x_on  # Enable x-cmd

# Enable zoxide - A smarter cd command
# Install: cargo install zoxide OR apt install zoxide
command -v zoxide >/dev/null 2>&1 && eval "$(zoxide init bash)"

# MPD daemon start (if no other user instance exists)
if command -v mpd >/dev/null 2>&1
then
  [! -s ~/.mpd/pid ] && mpd
fi

# Conda environment
[ -f /opt/conda/etc/profile.d/conda.sh ] && source /opt/conda/etc/profile.d/conda.sh
